//////////////////////////////////////////////////////////////////////////////
//
// Syntax for .lpl files.
// @brief        This files contains the syntax needed for parsing .lpl files.
//							 .lpl files contain the properties of a project
// @contributor  Quinten Heijn - samuel.heijn@gmail.com - UvA
// @date         18-06-2018
//
//////////////////////////////////////////////////////////////////////////////

module parsing::languages::lpl::Syntax

import ParseTree;

//////////////////////////////////////////////////////////////////////////////
// Parser Rules
//////////////////////////////////////////////////////////////////////////////  

start syntax Properties
	= properties: Property*;
	
syntax Property
	= occurrence: INTEGER "x" NAME ("in" NAME)?
	| adjecent:	NAME "adjecent to" NAME;
	
//////////////////////////////////////////////////////////////////////////////
// Lexer Rules
//////////////////////////////////////////////////////////////////////////////

lexical NEGATION
	= @category="Negation" "!";

lexical NAME
  = @category="Name" ([a-zA-Z_$.] [a-zA-Z0-9_$.]* !>> [a-zA-Z0-9_$.]) \ Keyword;
 
lexical INTEGER
  = [0-9]+;
    
lexical STRING
  = ![\"]*;

//////////////////////////////////////////////////////////////////////////////
// Layout
//////////////////////////////////////////////////////////////////////////////  

layout LAYOUTLIST
  = LAYOUT* !>> [\t-\n \r \ ];

lexical LAYOUT
  =  [\t-\n \r \ ];
  
keyword Keyword
  = "size of"
  | "is"
  | "occurences of"
  | "is adjecend to"
  | "stays connected to"
  | "stay intact"
  | "in"
  | "x";
  
//////////////////////////////////////////////////////////////////////////////
// API
//////////////////////////////////////////////////////////////////////////////
  
public start[Properties] parseLpl(loc file) = 
  parse(#start[Properties], file);
  
public start[Properties] parseLpl(str input, loc location) 
{ 
	return parse(#start[Properties], input, location); 
}